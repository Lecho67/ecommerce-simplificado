# ecommerce-simplificado/nginx/default.conf
server {
    listen 80;
    server_name localhost; # Puedes cambiar esto por tu dominio real en producción

    # Configuración para servir la aplicación React (SPA)
    location / {
        root /usr/share/nginx/html; # Directorio donde Nginx buscará los archivos de React
        index index.html index.htm;
        try_files $uri $uri/ /index.html; # IMPORTANTE: Para que React Router funcione con recargas de página
    }
    # Bloque para servir los archivos estáticos de Django (admin, etc.)
    location /static/ {
        alias /usr/share/nginx/static/; # La ruta donde Nginx esperará los archivos estáticos de Django
        expires 30d; # Opcional: para cachear los archivos estáticos
    }
    # Proxy inverso para el backend de Django
    # Todas las peticiones que empiecen con /api/ serán redirigidas al servicio 'backend' en Docker
    location /api/ {
        proxy_pass http://backend:8000/api/; # 'backend' es el nombre del servicio de Django en docker-compose
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # Para CORS: si tu frontend y backend están en dominios/puertos diferentes,
        # CORS debe ser manejado en el backend de Django (ya lo hicimos con corsheaders)
    }

    # Páginas de error personalizadas (opcional)
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}